" Common =======================================================================
set number
syntax on
colorscheme delek
set tabstop=4
set expandtab
set shiftwidth=4
set autoindent
set smartindent
set scroll=2
if !has('nvim')
  set clipboard=unnamedplus,autoselect
else
  set clipboard=unnamedplus
endif
set nrformats-=octal
set formatoptions+=mM
set whichwrap=b,s,[,],<,>
set backspace=indent,eol,start
set ambiwidth=double
set wildmenu
set cmdheight=1
set laststatus=2
set showcmd
set hlsearch
set nowrap
set hidden

set backup
set backupdir=~/.vim/backup
set noswapfile

" Dein =========================================================================
if &compatible
  set nocompatible
endif
" Add the dein installation directory into runtimepath
set runtimepath+=~/.cache/dein/repos/github.com/Shougo/dein.vim

if dein#load_state(expand('~/.cache/dein'))
  call dein#begin(expand('~/.cache/dein'))

  if !has('nvim')
    call dein#add('roxma/vim-hug-neovim-rpc')
    call dein#add('roxma/nvim-yarp')
    call dein#load_toml('~/.vim/dein.toml', {'lazy': 0})
  else
    call dein#load_toml('~/.config/nvim/dein.toml', {'lazy': 0})
  endif

  call dein#end()
  call dein#save_state()
endif

if dein#check_install()
  call dein#install()
endif

filetype plugin indent on
syntax enable

" Key map ======================================================================
let mapleader = "\<Space>"
nnoremap <leader><leader> :<C-u>cd %:h<CR>
nnoremap <leader>w :<C-u>w<CR>
nnoremap <leader>q :<C-u>bd<CR>
" nnoremap <leader>h :cd %:h<CR>

nnoremap <leader>e :<C-u>Files<CR>
nnoremap <leader>g :<C-u>GFiles<CR>
nnoremap <leader>G :<C-u>GFiles?<CR>
nnoremap <leader>p :<C-u>Rg<CR>
nnoremap <leader>h :<C-u>History<CR>
nnoremap <leader>b :<C-u>Buffer<CR>

nnoremap <silent> <leader>r :<C-u>call RepeatTerm()<CR>
" nnoremap <silent> <C-l> :<C-u>tabnext<CR>
" nnoremap <silent> <C-h> :<C-u>tabNext<CR>
nnoremap <silent> <C-l> :<C-u>bnext<CR>
nnoremap <silent> <C-h> :<C-u>bprevious<CR>
nnoremap j gj
nnoremap k gk
nnoremap <silent> K :<C-u>call <SID>show_documentation()<CR>
inoremap <silent> jj <ESC>
nnoremap <silent> <ESC><ESC> :noh<CR>
tnoremap <esc> <C-\><C-n>

function! RepeatTerm()
    " call term_sendkeys(term_list()[0], "\<c-p> \<c-j>")
    :!tmux send-keys -t 0:0.0 C-p C-j
endfunction

function! s:show_documentation() abort
  if index(['vim','help'], &filetype) >= 0
    execute 'h ' . expand('<cword>')
  else
    :LspHover
  endif
endfunction

" Merlin and ocp-indent ========================================================
" let g:opamshare = substitute(system('opam config var share'),'\n$','','''')

" execute 'set rtp+=' . g:opamshare . '/merlin/vim'
" execute 'set rtp^=' . g:opamshare . '/ocp-indent/vim'
" execute 'helptags ' . g:opamshare . '/merlin/vim/doc'

" let g:syntastic_ocaml_chekers = ['merlin']
" function! s:ocaml_format()
"     let now_line = line('.')
"     exec ':%! ocp-indent'
"     exec ':' . now_line
" endfunction

" augroup ocaml_format
"     autocmd!
"     autocmd BufWrite,FileWritePre,FileAppendPre *.mli\= call s:ocaml_format()
" augroup END
