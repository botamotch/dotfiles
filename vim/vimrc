" Common =======================================================================
set number
syntax on
" colorscheme default
set tabstop=4
set expandtab
set shiftwidth=4
set autoindent
set smartindent
set scroll=2
if !has('nvim')
  set clipboard=unnamedplus,autoselect
else
  set clipboard=unnamedplus
endif
set nrformats-=octal
set formatoptions+=mM
set whichwrap=b,s,[,],<,>
set backspace=indent,eol,start
set ambiwidth=single
set wildmenu
set cmdheight=1
set laststatus=2
set showcmd
set hlsearch
set nowrap
set hidden
set backup
set backupdir=~/.vim/backup
set noswapfile
if executable('fcitx5')
  let g:fcitx_state = 1
  augroup fcitx_savestate
    autocmd!
    autocmd InsertLeave * let g:fcitx_state = str2nr(system('fcitx5-remote'))
    autocmd InsertLeave * call system('fcitx5-remote -c')
    autocmd InsertEnter * call system(g:fcitx_state == 1 ? 'fcitx5-remote -c': 'fcitx5-remote -o')
  augroup END
endif

" Dein =========================================================================
if &compatible
  set nocompatible
endif
" Add the dein installation directory into runtimepath
set runtimepath+=~/.cache/dein/repos/github.com/Shougo/dein.vim

if dein#load_state(expand('~/.cache/dein'))
  call dein#begin(expand('~/.cache/dein'))
  if !has('nvim')
    call dein#add('roxma/vim-hug-neovim-rpc')
    call dein#add('roxma/nvim-yarp')
    call dein#load_toml('~/.vim/dein.toml', {'lazy': 0})
  else
    call dein#load_toml('~/.config/nvim/dein.toml', {'lazy': 0})
  endif
  call dein#end()
  call dein#save_state()
endif

if dein#check_install()
  call dein#install()
endif

filetype plugin indent on
syntax enable
autocmd FileType vue syntax sync fromstart

" Key map ======================================================================
let mapleader = "\<Space>"
nnoremap <leader><leader> :<C-u>cd %:h<CR>
nnoremap <leader>w :<C-u>w<CR>
nnoremap <leader>q :<C-u>bd<CR>
nnoremap <silent> <C-l> :<C-u>bnext<CR>
nnoremap <silent> <C-h> :<C-u>bprevious<CR>
nnoremap j gj
nnoremap k gk
inoremap <silent> jj <ESC>
nnoremap <silent> <ESC><ESC> :noh<CR>
tnoremap <esc> <C-\><C-n>
" 'junegunn/fzf.vim' ---------------------------------------------------------
nnoremap <leader>e :<C-u>Files<CR>
nnoremap <leader>g :<C-u>GFiles?<CR>
nnoremap <leader>p :<C-u>Rg<CR>
nnoremap <leader>h :<C-u>History<CR>
nnoremap <leader>b :<C-u>Buffer<CR>
" 'tpope/vim-fugitive' -------------------------------------------------------
nnoremap <leader>G :<C-u>Git<CR>
" 'prabirshrestha/vim-lsp' ---------------------------------------------------
nmap <silent> K <plug>(lsp-hover)
nmap <silent> <C-k> <plug>(lsp-peek-definition)
nmap <silent> gd <plug>(lsp-definition)
nmap <silent> ]g <Plug>(lsp-next-diagnostic)
nmap <silent> [g <Plug>(lsp-previous-diagnostic)
nmap <silent> gs <plug>(lsp-document-symbol-search)
nmap <silent> gS <plug>(lsp-workspace-symbol-search)
nmap <silent> gr <plug>(lsp-references)
nmap <silent> gl <plug>(lsp-document-diagnostics)
nmap <silent> <leader>rn <plug>(lsp-rename)
" 'racer-rust/vim-racer' -----------------------------------------------------
" au FileType rust nmap gd <Plug>(rust-def)
" au FileType rust nmap gs <Plug>(rust-def-split)
" au FileType rust nmap gx <Plug>(rust-def-vertical)
" au FileType rust nmap <leader>gd <Plug>(rust-doc)
" other function -------------------------------------------------------------
nnoremap <silent> <leader>r :<C-u>call RepeatTerm()<CR>
function! RepeatTerm()
  " call term_sendkeys(term_list()[0], "\<c-p> \<c-j>")
  :!tmux send-keys -t 0:0.0 C-p C-j
endfunction

autocmd ColorScheme * highlight Normal ctermbg=none
autocmd ColorScheme * highlight NonText ctermbg=none
autocmd ColorScheme * highlight LineNr ctermbg=none
autocmd ColorScheme * highlight Folded ctermbg=none
autocmd ColorScheme * highlight EndOfBuffer ctermbg=none
colorscheme iceberg
